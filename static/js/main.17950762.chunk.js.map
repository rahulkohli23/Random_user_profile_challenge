{"version":3,"sources":["images/background.jpg","images/profile.jpg","components/Glasscard.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","animated","div","StyledImg","img","StyledH1","h1","StyledH3","h3","calc","x","y","window","innerHeight","innerWidth","trans","s","Glasscard","user","useSpring","xys","config","mass","tension","friction","props","set","useState","Display","setDisplay","console","log","JSON","stringify","onMouseMove","clientX","clientY","onMouseLeave","style","transform","interpolate","onClick","alt","src","picture","large","Typography","variant","color","gutterBottom","name","title","first","last","toUpperCase","display","dob","age","gender","email","phone","location","street","number","city","state","country","postcode","useStyles","makeStyles","theme","root","flexGrow","backgroundImage","background","backgroundSize","width","backgroundPosition","height","backgroundRepeat","backgroundAttachment","objectFit","textAlign","minHeight","paper","control","padding","spacing","headerSpan","fontFamily","fontSize","marginBottom","App","useEffect","fetch","then","response","json","data","setUsers","results","users","classes","className","Grid","container","xs","justify","map","item","sm","md","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17950762.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.2929657b.jpg\";","export default __webpack_public_path__ + \"static/media/profile.bfa8d19d.jpg\";","import React, { useState } from \"react\";\nimport profile from \"../images/profile.jpg\";\nimport styled from \"styled-components\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Container = styled(animated.div)`\n  display: inline-block;\n  padding: 3em;\n  background: #c7d2fe66;\n  border-radius: 10px;\n  z-index: 1;\n  position: relative;\n  backdrop-filter: blur(10px);\n  border: 2px solid transparent;\n  background-clip: border-box;\n  cursor: pointer;\n  width: 75%;\n  /* margin: 20px; */\n`;\n\nconst StyledImg = styled.img`\n  width: 200px;\n  height: auto;\n  border: 2px solid black;\n  border-radius: 50%;\n`;\n\nconst StyledH1 = styled.h1`\n  line-height: 1.5;\n  letter-spacing: 1.15;\n  font-family: \"Gilroy\";\n`;\n\nconst StyledH3 = styled.h3`\n  line-height: 1.5;\n  letter-spacing: 1.15;\n  font-family: \"Gilroy\";\n  font-size: 20px;\n`;\n\nconst calc = (x, y) => [\n  -(y - window.innerHeight / 2) / 20,\n  (x - window.innerWidth / 2) / 20,\n  1,\n];\nconst trans = (x, y, s) =>\n  `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nconst Glasscard = ({user}) => {\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 20, tension: 200, friction: 50 },\n  }));\n\n  const [Display, setDisplay] = useState(false);\n\n  console.log(`User ${JSON.stringify(user)}`);\n  return (\n    <Container\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\n      style={{\n        transform: props.xys.interpolate(trans),\n      }}\n      onClick={() => setDisplay(!Display)}\n    >\n      <StyledImg alt=\"profile\" src={user.picture.large} />\n      <StyledH1>\n        <Typography variant=\"subtitle1\" style={{color:\"white\"}} gutterBottom>\n          {`${user.name.title} ${user.name.first} ${user.name.last}`.toUpperCase()}\n        </Typography>\n      </StyledH1>\n      <div style={{ display: Display ? \"block\" : \"none\" }}>\n        <Typography variant=\"subtitle1\">\n          <StyledH3>{`${user.dob.age} ${user.gender}`}</StyledH3>\n          <StyledH3>{user.email}</StyledH3>\n          <StyledH3>{user.phone}</StyledH3>\n          <StyledH3>{`# ${user.location.street.number}, ${user.location.street.name}, ${user.location.city}, ${user.location.state}, ${user.location.country} - ${user.location.postcode}`}</StyledH3>\n        </Typography>\n      </div>\n    </Container>\n  );\n};\n\nexport default Glasscard;\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport background from \"./images/background.jpg\";\nimport Glasscard from \"./components/Glasscard\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundImage: `url(${background})`,\n    backgroundSize: \"cover\",\n    width: \"100vw\",\n    backgroundPosition: \"center\",\n    height: \"100\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundAttachment: \"cover\",\n    objectFit: \"cover\",\n    textAlign: \"center\",\n    minHeight: \"100vh\",\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  headerSpan: {\n    height: \"10\",\n    fontFamily: \"Caveat\",\n    color: \"#e3dfd5\",\n    fontSize: \"75px\",\n    \"backdrop-filter\": \"blur(20px)\",\n    marginBottom: \"2%\",\n  },\n}));\n\nfunction App() {\n  useEffect(() => {\n    fetch(`https://randomuser.me/api/?results=5`)\n      .then((response) => response.json())\n      .then((data) => setUsers(data.results));\n  },[]);\n  const [spacing, setSpacing] = useState(2);\n  const [users, setUsers] = useState([]);\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.headerSpan}>\n        Random User profiles\n      </div>\n    <Grid\n      container\n      xs={12}\n      spacing={4}\n      justify=\"center\"\n    >\n      {users.map((user) => {\n        return (\n          <Grid\n            item\n            xs={12}\n            sm={6}\n            md={4}\n            spacing={spacing}\n            style={{ textAlign: \"center\" }}\n          >\n            <Glasscard style={{ display: \"flex\" }} user={user}/>\n          </Grid>\n        );\n      })}\n    </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}